base_images:
  os:
    name: centos
    namespace: origin
    tag: stream8
build_root:
#  image_stream_tag:
#    name: release
#    namespace: openshift
#    tag: golang-1.21
  project_image:
    dockerfile_literal: |
      FROM registry.access.redhat.com/ubi9:9.3
      RUN dnf install -y podman procps go
      RUN ps -ef
      RUN podman run --rm --cap-add=sys_admin,mknod --device=/dev/fuse --security-opt label=disable quay.io/podman/stable podman run docker.io/multiarch/qemu-user-static --reset -p yes
images:
- build_args:
  - name: MANIFEST_RELEASE
    value: master
  dockerfile_literal: |
    # Build the manager binary
    ARG GOLANG_VERSION=1.21
    ARG USE_LOCAL=false
    ARG OVERWRITE_MANIFESTS=""
    
    ################################################################################
    FROM --platform=linux/ppc64le registry.access.redhat.com/ubi8/go-toolset:$GOLANG_VERSION as builder_local_false
    ARG OVERWRITE_MANIFESTS
    # Get all manifests from remote git repo to builder_local_false by script
    USER root
    WORKDIR /
    COPY get_all_manifests.sh get_all_manifests.sh
    RUN ./get_all_manifests.sh ${OVERWRITE_MANIFESTS}
    
    ################################################################################
    FROM --platform=linux/ppc64le registry.access.redhat.com/ubi8/go-toolset:$GOLANG_VERSION as builder_local_true
    # Get all manifests from local to builder_local_true
    USER root
    WORKDIR /opt
    # copy local manifests to build
    COPY opt/manifests/ /opt/manifests/
    
    ################################################################################
    FROM --platform=linux/ppc64le builder_local_${USE_LOCAL} as builder
    USER root
    WORKDIR /workspace
    # Copy the Go Modules manifests
    COPY go.mod go.mod
    COPY go.sum go.sum
    # cache deps before building and copying source so that we don't need to re-download as much
    # and so that source changes don't invalidate our downloaded layer
    RUN go mod download
    
    # Copy the go source
    COPY apis/ apis/
    COPY components/ components/
    COPY controllers/ controllers/
    COPY main.go main.go
    COPY pkg/ pkg/
    
    # Build
    RUN CGO_ENABLED=1 GOOS=linux GOARCH=ppc64le go build -a -o manager main.go
    
    ################################################################################
    FROM --platform=linux/ppc64le registry.access.redhat.com/ubi8/ubi-minimal:latest
    WORKDIR /
    COPY --from=builder /workspace/manager .
    COPY --chown=1001:0 --from=builder /opt/manifests /opt/manifests
    # Recursive change all files
    RUN chown -R 1001:0 /opt/manifests &&\
        chmod -R g=u /opt/manifests
    USER 1001
    
    ENTRYPOINT ["/manager"]
  from: os
  to: opendatahub-operator
operator:
  bundles:
  - dockerfile_path: Dockerfiles/bundle.Dockerfile
  substitutions:
  - pullspec: REPLACE_IMAGE:latest
    with: pipeline:opendatahub-operator
releases:
  initial:
    integration:
      name: "4.14"
      namespace: ocp
  latest:
    integration:
      include_built_images: true
      name: "4.14"
      namespace: ocp
resources:
  '*':
    requests:
      cpu: 200m
      memory: 200Mi
tests:
- as: opendatahub-operator-pr-image-mirror
  steps:
    dependencies:
      SOURCE_IMAGE_REF: opendatahub-operator
    env:
      IMAGE_REPO: opendatahub-operator
    workflow: opendatahub-io-ci-image-mirror
- as: opendatahub-operator-image-mirror
  postsubmit: true
  skip_if_only_changed: ^\.github/|^docs/|\.[mM][dD]$|^.gitignore$|^golangci|^crd-ref-docs\.config|^OWNERS$|^PROJECT$|^LICENSE$|^OWNERS_ALIASES$
  steps:
    dependencies:
      SOURCE_IMAGE_REF: opendatahub-operator
    env:
      IMAGE_REPO: opendatahub-operator
      RELEASE_VERSION: incubation
    workflow: opendatahub-io-ci-image-mirror
- as: opendatahub-operator-image-mirror-ppc64le
  skip_if_only_changed: ^\.github/|^docs/|\.[mM][dD]$|^.gitignore$|^golangci|^crd-ref-docs\.config|^OWNERS$|^PROJECT$|^LICENSE$|^OWNERS_ALIASES$
  steps:
    dependencies:
      SOURCE_IMAGE_REF: opendatahub-operator
    env:
      IMAGE_REPO: opendatahub-operator
      RELEASE_VERSION: incubation
    workflow: opendatahub-io-ci-image-mirror-ppc64le
- as: opendatahub-operator-e2e
  skip_if_only_changed: ^\.github/|^docs/|\.[mM][dD]$|^.gitignore$|^golangci|^crd-ref-docs\.config|^OWNERS$|^PROJECT$|^LICENSE$|^OWNERS_ALIASES$
  steps:
    cluster_profile: gcp-opendatahub
    env:
      COMPUTE_NODE_TYPE: n2-standard-8
      OO_CHANNEL: fast
      OO_INSTALL_NAMESPACE: openshift-operators
      OO_PACKAGE: opendatahub-operator
      OO_TARGET_NAMESPACES: '!all'
    test:
    - as: e2e
      cli: latest
      commands: |
        unset GOFLAGS
        make e2e-test -e OPERATOR_NAMESPACE=openshift-operators
      from: src
      resources:
        requests:
          cpu: 2000m
          memory: 3Gi
    workflow: optional-operators-ci-gcp
zz_generated_metadata:
  branch: incubation
  org: opendatahub-io
  repo: opendatahub-operator
